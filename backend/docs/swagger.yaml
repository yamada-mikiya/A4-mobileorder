basePath: /
definitions:
  models.AuthenticateRequest:
    properties:
      email:
        example: new.user@example.com
        type: string
      guest_order_token:
        example: 15ff4999-2cfd-41f3-b744-926e7c5c7a0e
        type: string
    type: object
  models.AuthenticatedOrderResponse:
    properties:
      order_id:
        type: integer
    type: object
  models.CreateOrderRequest:
    properties:
      products:
        items:
          $ref: '#/definitions/models.OrderProductRequest'
        type: array
    type: object
  models.CreateOrderResponse:
    properties:
      guest_order_token:
        example: 15ff4999-2cfd-41f3-b744-926e7c5c7a0
        type: string
      message:
        example: Order created successfully as a guest. Please sign up to claim this
          order.
        type: string
      order_id:
        example: 6
        type: integer
    type: object
  models.LoginResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxNiwicm9sZSI6ImN1c3RvbWVyIiwiZXhwIjoxNzUxNTIwMjk1LCJpYXQiOjE3NTEyNjEwOTV9.oItkz3SDGGK0eQSP6BBq-SF3nWLk7Q-ITD1J6UrXeUE
        type: string
    type: object
  models.OrderProductRequest:
    properties:
      product_id:
        example: 1
        type: integer
      quantity:
        example: 2
        type: integer
    type: object
  models.SignUpResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxNiwicm9sZSI6ImN1c3RvbWVyIiwiZXhwIjoxNzUxNTIwMjk1LCJpYXQiOjE3NTEyNjEwOTV9.oItkz3SDGGK0eQSP6BBq-SF3nWLk7Q-ITD1J6UrXeUE
        type: string
      user:
        $ref: '#/definitions/models.UserResponse'
    type: object
  models.UserResponse:
    properties:
      email:
        example: new.user@example.com
        type: string
      role:
        type: string
      user_id:
        example: 16
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is mobileorder API
  title: mobile_order
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: 既存のユーザーを認証し、新しい認証トークンを発行します。ゲスト注文トークンをリクエストに含めることで、既存のゲスト注文をアカウントに紐付けることも可能です。
      parameters:
      - description: ユーザーのメールアドレスと、任意でゲスト注文トークン
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AuthenticateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 認証成功時のレスポンス
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: リクエストが不正な場合
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 認証に失敗した場合
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: サーバー内部エラー
          schema:
            additionalProperties:
              type: string
            type: object
      summary: ユーザー認証 (LogIn)
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: 新しいユーザーアカウントを作成し、認証トークンとユーザー情報を返します。ゲスト注文トークンをリクエストに含めることで、既存のゲスト注文をアカウントに紐付けることも可能です。
      parameters:
      - description: ユーザーのメールアドレスと、任意でゲスト注文トークン
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AuthenticateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 登録成功時のレスポンス
          schema:
            $ref: '#/definitions/models.SignUpResponse'
        "400":
          description: リクエストが不正な場合
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: メールアドレスが既に使用されている場合
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: サーバー内部エラー
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 新規ユーザー登録 (SignUp)
      tags:
      - Auth
  /shops/{shop_id}/guest-orders:
    post:
      consumes:
      - application/json
      description: ゲストユーザー（未ログイン）が新しい注文を作成します。認証は不要です。
      parameters:
      - description: 店舗ID (Shop ID)
        in: path
        name: shop_id
        required: true
        type: integer
      - description: 注文する商品の情報 (Product ID and quantity)
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 注文成功時のレスポンス" swaggertype:"object
          schema:
            $ref: '#/definitions/models.CreateOrderResponse'
      summary: ゲスト向け注文作成 (Create Order for Guest)
      tags:
      - Order
  /shops/{shop_id}/orders:
    post:
      consumes:
      - application/json
      description: 認証済みユーザーが新しい注文を作成します。Authorizationヘッダーに有効なBearerトークンが必須です。
      parameters:
      - description: 店舗ID (Shop ID)
        in: path
        name: shop_id
        required: true
        type: integer
      - description: 注文する商品の情報 (Product ID and quantity)
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 注文成功時のレスポンス
          schema:
            $ref: '#/definitions/models.AuthenticatedOrderResponse'
      security:
      - BearerAuth: []
      summary: 認証ユーザー向け注文作成 (Create Order for Authenticated User)
      tags:
      - Order
securityDefinitions:
  BearerAuth:
    description: '"認証トークンを''Bearer ''に続けて入力してください。例: Bearer {JWTトークン}"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
