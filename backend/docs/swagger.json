{
    "swagger": "2.0",
    "info": {
        "description": "モバイルオーダー（事前注文・決済）システムのためのAPI仕様書です。\nユーザー認証、商品情報の取得、注文処理などの機能を提供します。",
        "title": "Mobile Order API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/admin/orders/{order_id}/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "管理者が担当する店舗の注文を削除します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "管理者 (Admin)"
                ],
                "summary": "注文の削除 (Admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "削除する注文のID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功メッセージ",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "注文IDの形式が不正です",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "認証に失敗しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "この注文へのアクセス権がありません",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "指定された注文が見つかりません",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "サーバー内部でエラーが発生しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/orders/{order_id}/status": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "管理者が担当する店舗の注文ステータスを一段階進めます (調理中→調理完了→お渡し済み)。リクエストボディは不要です。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "管理者 (Admin)"
                ],
                "summary": "注文ステータスの更新 (Admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ステータスを更新する注文のID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功メッセージ",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "注文IDの形式が不正です",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "認証に失敗しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "この注文へのアクセス権がありません",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "指定された注文が見つかりません",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "これ以上ステータスを進められない場合に返されます (例: 'handed'の注文)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "サーバー内部でエラーが発生しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/shops/{shop_id}/orders/completed": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ログイン中の管理者が担当する店舗の、「調理完了」ステータスの注文を全て取得します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "管理者 (Admin)"
                ],
                "summary": "「調理完了」の注文一覧を取得 (Admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "注文一覧を取得する店舗のID",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "調理完了の注文リスト",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AdminOrderResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "店舗IDの形式が不正です",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "認証に失敗しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "この店舗へのアクセス権がありません",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "サーバー内部でエラーが発生しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/shops/{shop_id}/orders/cooking": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ログイン中の管理者が担当する店舗の、「調理中」ステータスの注文を全て取得します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "管理者 (Admin)"
                ],
                "summary": "「調理中」の注文一覧を取得 (Admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "注文一覧を取得する店舗のID",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "調理中の注文リスト",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AdminOrderResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "店舗IDの形式が不正です",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "認証に失敗しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "この店舗へのアクセス権がありません",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "サーバー内部でエラーが発生しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "既存のユーザーを認証し、新しい認証トークンを発行します。\nリクエストにゲスト注文トークンを含めることで、既存のゲスト注文をアカウントに紐付けることも可能です。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "認証 (Auth)"
                ],
                "summary": "ログイン (Log In)",
                "parameters": [
                    {
                        "description": "ユーザー情報 (メールアドレスと、任意でゲスト注文トークン)",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AuthenticateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "認証成功。新しい認証トークンを返します。",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストボディが不正です",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "認証に失敗しました (メールアドレスが存在しない等)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "サーバー内部でエラーが発生しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "新しいユーザーアカウントを作成し、認証トークンとユーザー情報を返します。\nリクエストにゲスト注文トークンを含めることで、既存のゲスト注文をアカウントに紐付けることも可能です。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "認証 (Auth)"
                ],
                "summary": "新規ユーザー登録 (Sign Up)",
                "parameters": [
                    {
                        "description": "ユーザー情報 (メールアドレスと、任意でゲスト注文トークン)",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AuthenticateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "登録成功。ユーザー情報と認証トークンを返します。",
                        "schema": {
                            "$ref": "#/definitions/models.SignUpResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストボディが不正です",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "指定されたメールアドレスは既に使用されています",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "サーバー内部でエラーが発生しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ログイン中のユーザーの、現在アクティブな（調理中または調理完了）注文履歴を取得します。このAPIは常に'cooking'と'completed'ステータスの注文のみを返します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "注文 (Order)"
                ],
                "summary": "アクティブな注文履歴の取得 (Get Active Order List)",
                "responses": {
                    "200": {
                        "description": "アクティブな注文履歴のリスト",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderListResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "認証に失敗しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "サーバー内部でエラーが発生しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders/{order_id}/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "特定の注文IDの現在のステータスと待ち状況をリアルタイムで取得します。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "注文 (Order)"
                ],
                "summary": "注文ステータスの取得 (Get Order Status)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "注文ID (Order ID)",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "現在の注文ステータス",
                        "schema": {
                            "$ref": "#/definitions/models.OrderStatusResponse"
                        }
                    },
                    "400": {
                        "description": "注文IDの形式が不正です",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "認証に失敗しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "注文が見つからないか、アクセス権がありません",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "サーバー内部でエラーが発生しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/shops/{shop_id}/guest-orders": {
            "post": {
                "description": "未ログインのゲストユーザーとして新しい注文を作成します。認証は不要です。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "注文 (Order)"
                ],
                "summary": "ゲストの注文作成 (Create Order - Guest)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "店舗ID (Shop ID)",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "注文内容 (Order details)",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "作成された注文IDとゲスト用トークン",
                        "schema": {
                            "$ref": "#/definitions/models.CreateOrderResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストボディまたは店舗IDが不正です",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "サーバー内部でエラーが発生しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/shops/{shop_id}/orders": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "認証済みのユーザーとして新しい注文を作成します。リクエストには有効なBearerトークンが必要です。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "注文 (Order)"
                ],
                "summary": "認証ユーザーの注文作成 (Create Order - Authenticated)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "店舗ID (Shop ID)",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "注文内容 (Order details)",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "作成された注文ID",
                        "schema": {
                            "$ref": "#/definitions/models.AuthenticatedOrderResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストボディまたは店舗IDが不正です",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "認証に失敗しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "サーバー内部でエラーが発生しました",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AdminOrderResponse": {
            "type": "object",
            "properties": {
                "customer_email": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ItemDetail"
                    }
                },
                "order_date": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                }
            }
        },
        "models.AuthenticateRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "new.user@example.com"
                },
                "guest_order_token": {
                    "type": "string",
                    "example": "15ff4999-2cfd-41f3-b744-926e7c5c7a0e"
                }
            }
        },
        "models.AuthenticatedOrderResponse": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "integer"
                }
            }
        },
        "models.CreateOrderRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderItemRequest"
                    }
                }
            }
        },
        "models.CreateOrderResponse": {
            "type": "object",
            "properties": {
                "guest_order_token": {
                    "type": "string",
                    "example": "15ff4999-2cfd-41f3-b744-926e7c5c7a0"
                },
                "message": {
                    "type": "string",
                    "example": "Order created successfully as a guest. Please sign up to claim this order."
                },
                "order_id": {
                    "type": "integer",
                    "example": 6
                }
            }
        },
        "models.ItemDetail": {
            "type": "object",
            "properties": {
                "item_name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxNiwicm9sZSI6ImN1c3RvbWVyIiwiZXhwIjoxNzUxNTIwMjk1LCJpYXQiOjE3NTEyNjEwOTV9.oItkz3SDGGK0eQSP6BBq-SF3nWLk7Q-ITD1J6UrXeUE"
                }
            }
        },
        "models.OrderItemRequest": {
            "type": "object",
            "properties": {
                "item_id": {
                    "type": "integer",
                    "example": 1
                },
                "quantity": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "models.OrderListResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ItemDetail"
                    }
                },
                "location": {
                    "type": "string"
                },
                "order_date": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "shop_name": {
                    "type": "string"
                },
                "status": {
                    "description": "\"cooking\" or \"completed\"",
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                },
                "waiting_count": {
                    "type": "integer"
                }
            }
        },
        "models.OrderStatusResponse": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "waiting_count": {
                    "type": "integer"
                }
            }
        },
        "models.SignUpResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxNiwicm9sZSI6ImN1c3RvbWVyIiwiZXhwIjoxNzUxNTIwMjk1LCJpYXQiOjE3NTEyNjEwOTV9.oItkz3SDGGK0eQSP6BBq-SF3nWLk7Q-ITD1J6UrXeUE"
                },
                "user": {
                    "$ref": "#/definitions/models.UserResponse"
                }
            }
        },
        "models.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "new.user@example.com"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "example": 16
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "認証トークンを'Bearer 'に続けて入力してください。 (例: Bearer {JWTトークン})",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}